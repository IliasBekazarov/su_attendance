#!/usr/bin/env python3
"""
–ñ–∞“£—ã –∫—É—Ä—Å/–≥—Ä—É–ø–ø–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Å—ã–Ω —Ç“Ø–∑“Ø“Ø
1-–∫—É—Ä—Å: CS-11, CS-12, CS-13, CS-14, CS-15
2-–∫—É—Ä—Å: CS-21, CS-22, CS-23, CS-24, CS-25
3-–∫—É—Ä—Å: CS-31, CS-32, CS-33, CS-34, CS-35
"""
import os
import sys
import django
from datetime import time

# Django setup
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'attendance_system.settings')
django.setup()

from django.contrib.auth.models import User
from core.models import (
    UserProfile, Student, Teacher, Course, Group, 
    Subject, Schedule, Attendance
)

def create_new_structure():
    """–ñ–∞“£—ã –∫—É—Ä—Å-–≥—Ä—É–ø–ø–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Å—ã–Ω —Ç“Ø–∑“Ø“Ø"""
    
    print("üèóÔ∏è –ñ–∞“£—ã –∫—É—Ä—Å/–≥—Ä—É–ø–ø–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Å—ã–Ω —Ç“Ø–∑“Ø“Ø...")
    
    # –≠—Å–∫–∏ –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä–¥—ã —Ç–∞–∑–∞–ª–æ–æ
    print("üßπ –≠—Å–∫–∏ –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä–¥—ã —Ç–∞–∑–∞–ª–æ–æ...")
    Schedule.objects.all().delete()
    Attendance.objects.all().delete()
    Student.objects.all().delete()
    Subject.objects.all().delete()
    Group.objects.all().delete()
    Course.objects.all().delete()
    
    # –ñ–∞“£—ã –∫—É—Ä—Å—Ç–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø
    print("üìö –ö—É—Ä—Å—Ç–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø...")
    course1 = Course.objects.create(name="1-–∫—É—Ä—Å", year=1)
    course2 = Course.objects.create(name="2-–∫—É—Ä—Å", year=2)
    course3 = Course.objects.create(name="3-–∫—É—Ä—Å", year=3)
    
    # –ê—Ä –∫—É—Ä—Å “Ø—á“Ø–Ω 5 –≥—Ä—É–ø–ø–∞–¥–∞–Ω —Ç“Ø–∑“Ø“Ø
    print("üë• –ì—Ä—É–ø–ø–∞–ª–∞—Ä–¥—ã —Ç“Ø–∑“Ø“Ø...")
    groups = {}
    
    # 1-–∫—É—Ä—Å –≥—Ä—É–ø–ø–∞–ª–∞—Ä—ã
    for i in range(1, 6):
        group_name = f"CS-1{i}"
        groups[group_name] = Group.objects.create(name=group_name, course=course1)
    
    # 2-–∫—É—Ä—Å –≥—Ä—É–ø–ø–∞–ª–∞—Ä—ã
    for i in range(1, 6):
        group_name = f"CS-2{i}"
        groups[group_name] = Group.objects.create(name=group_name, course=course2)
    
    # 3-–∫—É—Ä—Å –≥—Ä—É–ø–ø–∞–ª–∞—Ä—ã
    for i in range(1, 6):
        group_name = f"CS-3{i}"
        groups[group_name] = Group.objects.create(name=group_name, course=course3)
    
    # –ú—É–≥–∞–ª–∏–º–¥–µ—Ä–¥–∏ –∞–ª—É—É (–º—É—Ä–¥–∞–≥—ã –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä–¥–∞–Ω)
    teachers = Teacher.objects.all()
    if not teachers:
        print("‚ùå –ú—É–≥–∞–ª–∏–º–¥–µ—Ä —Ç–∞–±—ã–ª–≥–∞–Ω –∂–æ–∫! –ê–ª–≥–∞—á –º—É–≥–∞–ª–∏–º–¥–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“£“Ø–∑.")
        return
    
    print(f"üë®‚Äçüè´ {teachers.count()} –º—É–≥–∞–ª–∏–º —Ç–∞–±—ã–ª–¥—ã")
    
    # –ü—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø (–∫—É—Ä—Å –±–æ—é–Ω—á–∞)
    print("üìñ –ü—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø...")
    subjects = []
    
    # 1-–∫—É—Ä—Å –ø—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä–∏
    subjects.extend([
        Subject.objects.create(subject_name="Python –ü—Ä–æ–≥—Ä–∞–º–º–∞–ª–æ–æ –ù–µ–≥–∏–∑–¥–µ—Ä–∏", teacher=teachers[0], course=course1),
        Subject.objects.create(subject_name="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ 1", teacher=teachers[1], course=course1),
        Subject.objects.create(subject_name="–ê–Ω–≥–ª–∏—Å —Ç–∏–ª–∏", teacher=teachers[2], course=course1),
    ])
    
    # 2-–∫—É—Ä—Å –ø—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä–∏
    subjects.extend([
        Subject.objects.create(subject_name="–í–µ–± –ü—Ä–æ–≥—Ä–∞–º–º–∞–ª–æ–æ", teacher=teachers[0], course=course2),
        Subject.objects.create(subject_name="–ú–∞–∞–ª—ã–º–∞—Ç –ë–∞–∑–∞–ª–∞—Ä—ã", teacher=teachers[1], course=course2),
        Subject.objects.create(subject_name="–ê–ª–≥–æ—Ä–∏—Ç–º–¥–µ—Ä –∂–∞–Ω–∞ –ú–∞–∞–ª—ã–º–∞—Ç –¢“Ø–∑“Ø–º–¥”©—Ä“Ø", teacher=teachers[2], course=course2),
    ])
    
    # 3-–∫—É—Ä—Å –ø—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä–∏
    subjects.extend([
        Subject.objects.create(subject_name="–ü—Ä–æ–≥—Ä–∞–º–º–∞–ª—ã–∫ –ò–Ω–∂–µ–Ω–µ—Ä–∏—è", teacher=teachers[0], course=course3),
        Subject.objects.create(subject_name="–ö–æ–º–ø—å—é—Ç–µ—Ä–¥–∏–∫ –ñ–µ–ª–µ–ª–µ—Ä", teacher=teachers[1], course=course3),
        Subject.objects.create(subject_name="–ú–æ–±–∏–ª–¥–∏–∫ –ü—Ä–æ–≥—Ä–∞–º–º–∞–ª–æ–æ", teacher=teachers[2], course=course3),
    ])
    
    # –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø
    print("üéì –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —Ç“Ø–∑“Ø“Ø...")
    student_users = User.objects.filter(userprofile__role='STUDENT')
    
    if not student_users:
        print("‚ùå –°—Ç—É–¥–µ–Ω—Ç –∫–æ–ª–¥–æ–Ω—É—É—á—É–ª–∞—Ä —Ç–∞–±—ã–ª–≥–∞–Ω –∂–æ–∫!")
        return
    
    # –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ –≥—Ä—É–ø–ø–∞–ª–∞—Ä–≥–∞ –±”©–ª“Ø“Ø
    group_list = list(groups.values())
    students_per_group = len(student_users) // len(group_list) + 1
    
    for i, user in enumerate(student_users):
        group_index = i // students_per_group
        if group_index >= len(group_list):
            group_index = len(group_list) - 1
        
        group = group_list[group_index]
        
        Student.objects.create(
            name=f"{user.first_name} {user.last_name}" if user.first_name else user.username,
            user=user,
            course=group.course,
            group=group
        )
    
    # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç“Ø–∑“Ø“Ø (–∂–µ“£–∏–ª–¥–µ—Ç–∏–ª–≥–µ–Ω)
    print("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ–Ω–∏ —Ç“Ø–∑“Ø“Ø...")
    
    days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']
    time_slots = [
        (time(9, 0), time(10, 30)),   # 1-–ø–∞—Ä–∞
        (time(10, 45), time(12, 15)), # 2-–ø–∞—Ä–∞  
        (time(13, 0), time(14, 30)),  # 3-–ø–∞—Ä–∞
        (time(14, 45), time(16, 15)), # 4-–ø–∞—Ä–∞
    ]
    
    # –ê—Ä –≥—Ä—É–ø–ø–∞ “Ø—á“Ø–Ω –∂”©–Ω”©–∫”©–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    for group in groups.values():
        course_subjects = Subject.objects.filter(course=group.course)
        if course_subjects:
            for day_idx, day in enumerate(days):
                if day_idx < len(course_subjects):
                    subject = course_subjects[day_idx % len(course_subjects)]
                    slot = time_slots[day_idx % len(time_slots)]
                    
                    Schedule.objects.create(
                        subject=subject,
                        group=group,
                        day=day,
                        start_time=slot[0],
                        end_time=slot[1]
                    )
    
    print("\n‚úÖ –ñ–∞“£—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø —Ç“Ø–∑“Ø–ª–¥“Ø!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –ö—É—Ä—Å—Ç–∞—Ä: {Course.objects.count()}")
    print(f"   –ì—Ä—É–ø–ø–∞–ª–∞—Ä: {Group.objects.count()}")
    print(f"   –ü—Ä–µ–¥–º–µ—Ç—Ç–µ—Ä: {Subject.objects.count()}")
    print(f"   –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä: {Student.objects.count()}")
    print(f"   –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {Schedule.objects.count()}")

if __name__ == '__main__':
    try:
        create_new_structure()
    except Exception as e:
        print(f"‚ùå –ö–∞—Ç–∞ —á—ã–∫—Ç—ã: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
